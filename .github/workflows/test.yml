name: Test the APIs
on:
  push:
    branches:
      main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Test code
        id: run-tests
        run: npm run test:prod

      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  
  docker:
    needs: test
    runs-on: ubuntu-latest
    env:
      DB_LOCAL_URI: ${{ secrets.DB_LOCAL_URI }}
      PORT: ${{ secrets.PORT }}
      JWT_EXPIRES_TIME: ${{ secrets.JWT_EXPIRES_TIME }}
      JWT_SECRET: ${{ secrets.JWTSECRET }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and run image
        run:  |
          docker compose up -d 
          docker compose down

  build-push:
    needs: docker
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
    - name: Get code
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: build the Node API image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/node-mongo-test .
    - name: build the Docker imag
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/node-mongo-test
